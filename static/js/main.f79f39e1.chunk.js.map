{"version":3,"sources":["components/Base.js","components/Chart.js","App.js","serviceWorker.js","index.js"],"names":["Base","props","Component","Chart","handleRemainingChange","e","value","target","console","log","setState","remaining","parseFloat","computeData","state","monthly_payment","interest","amortization_period","interest_data","principal_data","bind","this","original_amount","remaining_data","total_principal_paid","total_interest_paid","run","push","annual_interest_paid","labels","current_year","parseInt","Date","getFullYear","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","generateLabels","datasets","generateRemainingGraph","generateInterestGraph","generatePrincipalGraph","Form","role","class","Group","controlId","Label","Control","onChange","type","placeholder","toFixed","generateGraph","App","header","className","initializeComponents","components","title","renderID","componentID","renderComponent","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f79f39e1.chunk.js","sourcesContent":["import React,{Component} from 'react';\n\nclass Base extends Component{\n    constructor(props){\n        super(props);\n    }\n}\n\nexport default Base;\n","import React from 'react';\nimport Base from './Base';\nimport {Line} from 'react-chartjs-2';\nimport Form from 'react-bootstrap/Form';\nimport { throwStatement } from '@babel/types';\n \nclass Chart extends Base{\n    constructor(props){\n        super(props)\n        this.state = {\n            monthly_payment: 1300,\n            interest: 2,\n            remaining: 300000,\n            amortization_period: 30,\n        };\n        this.interest_data = []\n        this.principal_data = []\n        this.computeData()\n        this.handleRemainingChange = this.handleRemainingChange.bind(this);\n    }\n    computeData() {\n        var remaining = this.state.remaining\n        var interest = this.state.interest\n        var amortization_period = this.state.amortization_period\n        var monthly_payment = this.state.monthly_payment\n        var original_amount = remaining\n        var remaining_data = []\n        var total_principal_paid = 0\n        var total_interest_paid = 0\n        var interest_data = []\n        for(var run=0;run<=amortization_period;run++){\n            this.principal_data.push(total_principal_paid)\n            interest_data.push(total_interest_paid)\n            var annual_interest_paid = parseFloat(remaining * (interest)/100)\n            total_interest_paid = total_interest_paid + annual_interest_paid\n            remaining_data.push(remaining)\n            total_principal_paid = total_principal_paid + (parseFloat(monthly_payment * 12) - annual_interest_paid )\n            if((original_amount - total_principal_paid) < 0)\n                break\n            remaining = original_amount - total_principal_paid\n        }\n        this.interest_data = interest_data\n        this.remaining_data = remaining_data\n    }\n    generateLabels(amortization_period){\n        var labels = []\n        var current_year = parseInt((new Date()).getFullYear());\n        for(var run=0;run<=amortization_period;run++){\n            labels.push((current_year + run))\n        }\n        return labels\n    }\n    generatePrincipalGraph() {\n        return {\n                label: 'Principal',\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(63, 191, 127,0.4)',\n                borderColor: 'rgba(63, 191, 127,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(63, 191, 127,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(63, 191, 127,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.principal_data\n        }\n    }\n    generateRemainingGraph() {\n        return {\n                label: 'Remaining',\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.remaining_data\n        }\n    }\n\n    generateInterestGraph() {\n        return {\n                label: 'Interest',\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(191, 63, 63,0.4)',\n                borderColor: 'rgba(191, 63, 63,1)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(191, 63, 63,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(191, 63, 63,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.interest_data\n        }\n    }\n\n    generateGraph() {\n        var data = {\n            labels: this.generateLabels(this.state.amortization_period),\n            datasets: [\n              this.generateRemainingGraph(),\n              this.generateInterestGraph(),\n              this.generatePrincipalGraph(),\n            ]\n        }\n        return data\n    }\n\n    handleRemainingChange = (e) => {\n        var value = e.target.value\n        console.log(value)\n        this.setState({\n            remaining: parseFloat(value)\n        });\n        this.computeData()\n    };\n\n    render() {\n        return (\n            <div>\n                <Form role=\"form\">\n                    <div class=\"row\">\n                        <Form.Group class=\"form-group col-lg-1\" controlId=\"formBasicEmail\">\n                            <div class=\"mt-3\">\n                                <Form.Label>Mortgage Amount ($)</Form.Label>\n                                <Form.Control value={this.state.remaining} onChange={this.handleRemainingChange} type=\"text\" placeholder=\"Mortgage Amount\" />\n                            </div>\n                            <div class=\"mt-3\">\n                                <Form.Label>Interest Rate (%)</Form.Label>\n                                <Form.Control value={this.state.interest.toFixed(2)} class=\"row mt-3\" type=\"text\" placeholder=\"Interest rate\" />\n                            </div>\n                            <div class=\"mt-3\">\n                                <Form.Label>Amortization Period (years)</Form.Label>\n                                <Form.Control value={this.state.amortization_period} class=\"row mt-3\" type=\"text\" placeholder=\"Amortization period\" />\n                            </div>\n                            <div class=\"mt-3\">\n                                <Form.Label>Monthly Payment ($)</Form.Label>\n                                <Form.Control value={this.state.monthly_payment} class=\"row mt-3\" type=\"text\" placeholder=\"Monthly payment\" />\n                            </div>\n                        </Form.Group>\n                    </div>\n                </Form>\n                <Line data={this.generateGraph()} />\n            </div>\n        );\n    }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Chart from './components/Chart';\n\nclass App extends Component {\n\n  constructor(props){\n  \tsuper(props);\n  \tthis.header = <h1 className=\"main-header text-center\">Mortgage Schedule</h1>\n  \tthis.initializeComponents();\n  }\n\n  initializeComponents() {\n  \tthis.components = [];\n\t\tthis.components['Chart'] = {title:\"\",renderID:<Chart />}\n  }\n\n  renderComponent(componentID) {\n  \treturn\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 text-center mt-3 mb-3\">\n\t\t\t\t\t\t{this.components[componentID].title}\n        \t\t\t</div>\n        \t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12 border-top border-bottom\">\n        \t\t\t\t{this.components[componentID].renderID}\n        \t\t\t</div>\n        \t\t</div>\n\t}\n\t\n  render() {\n    return (\n      \t<div className=\"container\">\n\t\t\t\t\t{this.header}\n\t\t\t\t\t{this.renderComponent('Chart')}\n\t\t\t\t\t<footer className=\"page-footer font-small blue\">\n  \t\t\t\t\t<div className=\"footer-copyright text-center py-3\">© 2019 Copyright:\n    \t\t\t\t\t<a href=\"http://ahsanmirza.com\"> Ahsan mirza</a>\n  \t\t\t\t\t</div>\n\t\t\t\t\t</footer>\n      \t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}